{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Python program to for tree traversals\
\
# A class that represents an individual node in a\
# Binary Tree\
\
\
class Node:\
	def __init__(self, key):\
		self.left = None\
		self.right = None\
		self.val = key\
\
\
# A function to do inorder tree traversal\
def printInorder(root):\
\
	if root:\
\
		# First recur on left child\
		printInorder(root.left)\
\
		# then print the data of node\
		print(root.val),\
\
		# now recur on right child\
		printInorder(root.right)\
\
\
# A function to do postorder tree traversal\
def printPostorder(root):\
\
	if root:\
\
		# First recur on left child\
		printPostorder(root.left)\
\
		# the recur on right child\
		printPostorder(root.right)\
\
		# now print the data of node\
		print(root.val),\
\
\
# A function to do preorder tree traversal\
def printPreorder(root):\
\
	if root:\
\
		# First print the data of node\
		print(root.val),\
\
		# Then recur on left child\
		printPreorder(root.left)\
\
		# Finally recur on right child\
		printPreorder(root.right)\
\
\
# Driver code\
root = Node(1)\
root.left = Node(2)\
root.right = Node(3)\
root.left.left = Node(4)\
root.left.right = Node(5)\
print "Preorder traversal of binary tree is"\
printPreorder(root)\
\
print "\\nInorder traversal of binary tree is"\
printInorder(root)\
\
print "\\nPostorder traversal of binary tree is"\
printPostorder(root)\
}